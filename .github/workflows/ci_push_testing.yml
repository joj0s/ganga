name: CI Push Testing

on: [pull_request]

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      files_to_lint: ${{ steps.flake8.outputs.files_to_lint }}
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v24

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install flake8

      - name: Setup flake8 annotations
        if: startsWith(github.head_ref, 'autopep8-patches')
        uses: rbialon/flake8-annotations@v1

      - name: Lint with flake8
        id: flake8
        run: |
          files_to_lint=""
          count=0
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == *.py ]]; then
              linting_output=`flake8 --count --exit-zero $file`
              count=`echo "$linting_output" | tail -1`
              if [[ $count > 0 ]]; then
                files_to_lint="$files_to_lint $file"
                echo "$linting_output"
              fi
            fi
          done
          echo "::set-output name=files_to_lint::$files_to_lint";

      - name: Fail on linting violations
        if: steps.flake8.outputs.files_to_lint != ''
        run: exit 1

  autofix_pr:
    name: Create autopep8 PR
    environment: default
    if: startsWith(github.head_ref, 'autopep8-patches') == false && needs.lint.outputs.files_to_lint != ''
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Run autopep8
        id: autopep8
        uses: peter-evans/autopep8@v1
        with:
          args: --exit-code --recursive --in-place --aggressive --aggressive ${{ needs.lint.outputs.files_to_lint }}

      - name: Set autopep8 branch name
        id: vars
        run: |
          echo ::set-output name=branch-name::"autopep8-patches/${{ github.head_ref }}"
          PR_NUMBER=`echo ${{ github.ref_name }} | cut -f 1 -d '/'`
          echo ::set-output name=pr-number::"$PR_NUMBER"

      - name: Create Pull Request
        if: steps.autopep8.outputs.exit-code == 2
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: autopep8 action fixes
          title: PEP8 fixes for PR \#${{ steps.vars.outputs.pr-number }} (${{ github.head_ref }}) by autopep8
          body: This is an auto-generated PR with fixes by autopep8 for the ${{ steps.vars.outputs.branch-name }} branch.
          labels: autopep8, automated pr
          branch: ${{ steps.vars.outputs.branch-name }}
          token: ${{ secrets.MY_TOKEN }}

  core-unit:
    name: GangaCore Unit
    needs: lint
    runs-on: ubuntu-latest
    container: centos:7
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3
        run: |
          yum install -y centos-release-scl-rh
          yum install -y rh-python38-python rh-python38-python-pip
      - name: Install dependencies
        run: |
          /opt/rh/rh-python38/root/usr/bin/python -m pip install --upgrade pip setuptools wheel
          /opt/rh/rh-python38/root/usr/bin/python -m pip install -e .[dev]
      - name: Test with pytest
        run: /opt/rh/rh-python38/root/usr/bin/python -m pytest --cov-report term-missing --cov ganga/GangaCore/Core --cov ganga/GangaCore/GPI --cov ganga/GangaCore/GPIDev --cov ganga/GangaCore/Lib --cov ganga/GangaCore/Runtime --cov ganga/GangaCore/PACKAGE.py --cov ganga/GangaCore/Utility --cov ganga/GangaCore/__init__.py ganga/GangaCore/test/Unit
